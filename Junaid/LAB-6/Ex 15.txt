// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.18;

contract DemoContract {
    address public owner;

    struct Receivers {
        string name;
        uint256 tokens;
    }

    mapping(address => Receivers) public users;

    modifier onlyOwner() {
        require(msg.sender == owner, "Not authorized");
        _;
    }

    constructor() {
        owner = msg.sender;
        users[owner].tokens = 100;
        users[owner].name = "Junaid"; // Auto-assign Junaid to owner
    }

    function double(uint value) public pure returns (uint) {
        return value * 2;
    }

    function register(string memory name) public {
        users[msg.sender].name = name;
    }

    function giveToken(address receiver, uint256 amount) public onlyOwner {
        require(users[owner].tokens >= amount, "Not enough tokens");
        users[owner].tokens -= amount;
        users[receiver].tokens += amount;
    }
}
